/**
 * Do not edit this file.  Any changes will be overwritten by the gamedata
 * updater or by upgrading your SourceMod install.
 *
 * To override data in this file, create a subdirectory named "custom" and
 * place your own gamedata file(s) inside of it.  Such files will be parsed
 * after SM's own.
 *
 * For more information, see http://wiki.alliedmods.net/Gamedata_Updating_(SourceMod)
 */

"Games"
{
	/* General Temp Entities */
	"#default"
	{
		"#supported"
		{
			"game"		"ship"
			"game"		"insurgency"
			"game"		"sourceforts"
			"game"		"FortressForever"
			"game"		"hidden"
			"game"		"zombie_master"
			"game"		"NeotokyoSource"
			"game"		"esmod"
			"game"		"ios"
			"game"		"hl2ctf"
		}

		"Offsets"
		{
			/* Offset into CBaseTempEntity constructor */
			"s_pTempEntities"
			{
				"windows"	"17"
			}
			"GetTEName"
			{
				"windows"	"4"
				"linux"		"4"
			}
			"GetTENext"
			{
				"windows"	"8"
				"linux"		"8"
			}
			"TE_GetServerClass"
			{
				"windows"	"1"
				"linux"		"1"
			}
		}

		"Signatures"
		{
			"CBaseTempEntity"
			{
				"library"	"server"
				"windows"	"\x8B\xC1\x8B\x4C\x24\x04\xC7\x00\x2A\x2A\x2A\x2A\x89\x48\x04\x8B\x15\x2A\x2A\x2A\x2A\x89\x50\x08\xA3\x2A\x2A\x2A\x2A\xC2\x04\x00"
			}
			"s_pTempEntities"
			{
				"library"	"server"
				"linux"		"@_ZN15CBaseTempEntity15s_pTempEntitiesE"
			}
		}
	}
	
	/* General GameRules */
	"#default"
	{
		"#supported"
		{
			"game"		"ship"
			"game"		"sourceforts"
			"game"		"FortressForever"
			"game"		"hidden"
			"game"		"ios"
			"game"		"hl2ctf"
		}
		
		"Offsets"
		{
			/* Offset into CreateGameRulesObject */
			"g_pGameRules"
			{
				"windows"	"2"
			}
		}
		
		"Signatures"
		{
			/* This signature sometimes has multiple matches, but this
			 * does not matter as g_pGameRules is involved in all of them.
			 * The same g_pGameRules offset applies to each match.
			 *
			 * Sometimes this block of bytes is at the beginning of the static
			 * CreateGameRulesObject function and sometimes it is in the middle
			 * of an entirely different function. This depends on the game.
			 */
			"CreateGameRulesObject"
			{
				"library"	"server"
				"windows"	"\x8B\x0D\x2A\x2A\x2A\x2A\x85\xC9\x74\x2A\x8B\x01\x6A\x01\xFF\x50"
			}
			"g_pGameRules"
			{
				"library"	"server"
				"linux"		"@g_pGameRules"
			}
		}
	}
	
	/* CGlobalEntityList */
	"#default"
	{
		"#supported"
		{
			"game"		"ship"
			"game"		"sourceforts"
			"game"		"FortressForever"
			"game"		"hidden"
			"game"		"zombie_master"
			"game"		"ios"
			"game"		"hl2ctf"
		}
		
		"Signatures"
		{	
			/* Functions in CGlobalEntityList */
			"FindEntityByClassname"
			{
				"library"	"server"
				"windows"	"\x53\x55\x56\x8B\xF1\x8B\x4C\x24\x2A\x85\xC9\x57\x74\x2A\x8B\x01\xFF\x50\x2A\x8B\x08\x81\xE1\x2A\x2A\x2A\x2A\x83\xC1\x2A\xC1\xE1\x2A\x8B\x3C\x31\xEB\x2A\x8B\xBE\x2A\x2A\x2A\x2A\x85\xFF\x74\x2A\x8B\x5C\x24\x2A\x8B\x2D\x2A\x2A\x2A\x2A\x8D\x9B\x00\x00\x00\x00\x8B\x37\x85\xF6\x75\x2A\x68\x2A\x2A\x2A\x2A\xFF\x2A\x83\xC4\x2A\xEB\x2A\x39"
				"linux"		"@_ZN17CGlobalEntityList21FindEntityByClassnameEP11CBaseEntityPKc"
			}
		}
	}

	/* Create Entity Signatures */
	"#default"
	{
		"#supported"
		{
			"game"		"sourceforts"
			"game"		"hidden"
			"game"		"FortressForever"
			"game"		"ios"
		}

		"Signatures"
		{
			"DispatchSpawn"
			{
				"library"	"server"
				"linux"		"@_Z13DispatchSpawnP11CBaseEntity"
				"windows"	"\x53\x55\x56\x8B\x74\x24\x10\x85\xF6\x57\x0F\x84\x2A\x2A\x2A\x2A\x8B\x1D\x2A\x2A\x2A\x2A\x8B\x03\x8B\xCB\xFF\x50\x60"
			}
			"CreateEntityByName"
			{
				"library"	"server"
				"linux"		"@_Z18CreateEntityByNamePKci"
				"windows"	"\x56\x8B\x74\x24\x0C\x83\xFE\xFF\x57\x8B\x7C\x24\x0C\x74\x25\x8B\x0D\x2A\x2A\x2A\x2A\x8B\x01\x56\xFF\x50\x54\x85\xC0"
			}
		}
	}

	/* IServer interface pointer */
	"#default"
	{
		"Keys"
		{
			/* Signature for the beginning of IVEngineServer::CreateFakeClient.
			 *
			 * The engine binary is not actually scanned in order to look for
			 * this. SourceHook is used to used to determine the address of the
			 * function and this signature is used to verify that it contains
			 * the expected code. A pointer to sv (IServer interface) is used
			 * here.
			 */
			"CreateFakeClient_Windows"	"\x8B\x44\x24\x2A\x50\xB9\x2A\x2A\x2A\x2A\xE8"
		}
		
		"Offsets"
		{
			/* Offset into IVEngineServer::CreateFakeClient */
			"sv"
			{
				"windows"	"6"
			}
		}

		"Signatures"
		{
			/* CBaseServer object for IServer interface */
			"sv"
			{
				"library"	"engine"
				"linux"		"@sv"
			}
		}
	}
	
	/* EntityFactoryDictionary function */
	"#default"
	{
		"Signatures"
		{
			"EntityFactory"
			{
				"library"	"server"
				"windows"	"\xB8\x01\x00\x00\x00\x84\x2A\x2A\x2A\x2A\x2A\x75\x1D\x09\x2A\x2A\x2A\x2A\x2A\xB9\x2A\x2A\x2A\x2A\xE8\x2A\x2A\x2A\x2A\x68\x2A\x2A\x2A\x2A\xE8\x2A\x2A\x2A\x2A\x83\xC4\x04\xB8\x2A\x2A\x2A\x2A\xC3"
				"linux"		"@_Z23EntityFactoryDictionaryv"
			}
		}
	}
	/* CBaseEntityOutput::FireOutput */
	"#default"
	{
		"#supported"
		{
			"game"		"zombie_master"
			"game"		"ios"
		}
		"Signatures"
		{
			"FireOutput"
			{
				"library"	"server"
				"windows"	"\x81\xEC\x1C\x03\x00\x00\x53\x55\x56\x8B\x71\x14"
				"linux"		"@_ZN17CBaseEntityOutput10FireOutputE9variant_tP11CBaseEntityS2_f"
			}
		}
	}

	/* SetUserInfo data */
	"#default"
	{
		"Offsets"
		{
			/**
			 * CBaseClient::SetUserCVar(char  const*,char  const*);
			 * Linux offset straight from VTable dump.
			 * Windows offset is crazy. Found the windows SetName function using string "(%d)%-0.*s"
			 * Cross referenced back to the vtable and counted manually (SetUserCvar is 1 higher, offsets start from 1)
			 */
			"SetUserCvar"
			{
				"windows"	"17"
				"linux"		"53"
			}
			/**
			 * CBaseClient::SetName(char  const*);
			 * Linux offset straight from VTable dump.
			 * Has string "(%d)%-0.*s"
			 */
			"SetClientName"
			{
				"windows"	"16"
				"linux"		"52"
			}
			/**
			 * Offset into CBaseClient - Used by CBaseServer::UpdateUserSettings to determine when changes have been made.
			 * Find CBaseClient::UpdateUserSettings (strings "net_maxroutable", "cl_updaterate" etc) and the offset is set to 0 near the end.
			 * Linux: 	mov     byte ptr [esi+98h], 0
			 * Win:	mov     byte ptr [esi+0A4h], 0
			 */
			"InfoChanged"
			{
				"windows"	"164"
				"linux"		"152"
			}
		}
	}
}
