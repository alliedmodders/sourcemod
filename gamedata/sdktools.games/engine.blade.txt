/**
 * Do not edit this file.  Any changes will be overwritten by the gamedata
 * updater or by upgrading your SourceMod install.
 *
 * To override data in this file, create a subdirectory named "custom" and
 * place your own gamedata file(s) inside of it.  Such files will be parsed
 * after SM's own.
 *
 * For more information, see http://wiki.alliedmods.net/Gamedata_Updating_(SourceMod)
 */

"Games"
{
	/* Sounds */
	"#default"
	{
		"Keys"
		{
			"SlapSoundCount"	"8"
			"SlapSound1"		"player/knight/pain1.wav"
			"SlapSound2"		"player/knight/pain2.wav"
			"SlapSound3"		"player/phalanx/pain1.wav"
			"SlapSound4"		"player/phalanx/pain2.wav"
			"SlapSound5"		"player/pure/pure-pain-01.wav"
			"SlapSound6"		"player/pure/pure-pain-02.wav"
			"SlapSound7"		"player/ryoku/pain1.wav"
			"SlapSound8"		"player/ryoku/pain2.wav"
		}
	}
	
	/* General Temp Entities */
	"#default"
	{
		"Offsets"
		{
			/* Offset into CBaseTempEntity constructor */
			"s_pTempEntities"
			{
				"windows"	"19"
			}
			"GetTEName"
			{
				"windows"	"4"
				"windows64"	"8"
				"linux64"	"8"
				"mac64"		"8"
			}
			"GetTENext"
			{
				"windows"	"8"
				"windows64"	"16"
				"linux64"	"16"
				"mac64"		"16"
			}
			"TE_GetServerClass"
			{
				"windows"	"0"
				"windows64"	"0"
				"linux64"	"0"
				"mac64"		"0"
			}
		}

		"Signatures"
		{
			"CBaseTempEntity"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x8B\xC1\x8B\x4D\x08\xC7\x00\x2A\x2A\x2A\x2A\x89\x48\x2A\x8B"
			}
			"s_pTempEntities"
			{
				"library"	"server"
				"linux"		"@_ZN15CBaseTempEntity15s_pTempEntitiesE"
				"mac"		"@_ZN15CBaseTempEntity15s_pTempEntitiesE"
			}
		}
	}
	
	/* CGlobalEntityList */
	"#default"
	{
		"Signatures"
		{
			/* Functions in CGlobalEntityList */
			"FindEntityByClassname"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x53\x56\x8B\xF1\x8B\x4D\x08\x57\x85\xC9\x74\x2A\x8B\x01\x8B\x50\x08\xFF\xD2\x8B\x00\x83\xF8\xFF\x75\x2A\xB8\xFF\x1F\x00\x00\x8D\x04\x40\x8B\x74\xC6\x2A\xEB"
				"linux"		"@_ZN17CGlobalEntityList21FindEntityByClassnameEP11CBaseEntityPKc"
				"mac"		"@_ZN17CGlobalEntityList21FindEntityByClassnameEP11CBaseEntityPKc"
			}
		}
	}

	/* General GameRules */
	"#default"
	{
		"Offsets"
		{
			/* Offset into CreateGameRulesObject */
			"g_pGameRules"
			{
				"windows"	"2"
			}
		}
		
		"Signatures"
		{
			/* This signature sometimes has multiple matches, but this
			 * does not matter as g_pGameRules is involved in all of them.
			 * The same g_pGameRules offset applies to each match.
			 *
			 * Sometimes this block of bytes is at the beginning of the static
			 * CreateGameRulesObject function and sometimes it is in the middle
			 * of an entirely different function. This depends on the game.
			 */
			"CreateGameRulesObject"
			{
				"library"	"server"
				"windows"	"\x8B\x0D\x2A\x2A\x2A\x2A\x85\xC9\x74\x2A\x8B\x01\x8B\x50\x2A\x6A\x01\xFF\xD2"
			}
			"g_pGameRules"
			{
				"library"	"server"
				"linux"		"@g_pGameRules"
				"mac"		"@g_pGameRules"
			}
		}
	}
	
	/* IServer interface pointer */
	"#default"
	{
		"Keys"
		{
			/* Signature for the beginning of IVEngineServer::CreateFakeClient.
			 *
			 * The engine binary is not actually scanned in order to look for
			 * this. SourceHook is used to used to determine the address of the
			 * function and this signature is used to verify that it contains
			 * the expected code. A pointer to sv (IServer interface) is used
			 * here.
			 */
			"CreateFakeClient_Windows"	"\x55\x8B\xEC\x8B\x2A\x2A\x50\xB9\x2A\x2A\x2A\x2A\xE8\x2A\x2A\x2A\x2A\x85\xC0\x75"
		}
		
		"Offsets"
		{
			/* Offset into IVEngineServer::CreateFakeClient */
			"sv"
			{
				"windows"	"8"
			}
		}
		
		"Signatures"
		{
			/* CBaseServer object for IServer interface */
			"sv"
			{
				"library"	"engine"
				"linux"		"@sv"
				"mac"		"@sv"
			}
		}
	}
	
	/* EntityFactoryDictionary function */
	"#default"
	{
		"Signatures"
		{
			"EntityFactory"
			{
				"library"	"server"
				"windows"	"\xB8\x01\x00\x00\x00\x84\x2A\x2A\x2A\x2A\x2A\x75\x1D\x09\x2A\x2A\x2A\x2A\x2A\xB9\x2A\x2A\x2A\x2A\xE8\x2A\x2A\x2A\x2A\x68\x2A\x2A\x2A\x2A\xE8\x2A\x2A\x2A\x2A\x83\xC4\x04\xB8\x2A\x2A\x2A\x2A\xC3"
				"linux"		"@_Z23EntityFactoryDictionaryv"
				"mac"		"@_Z23EntityFactoryDictionaryv"
			}
		}
	}
	
	/* CBaseEntityOutput::FireOutput */
	"#default"
	{
		"Signatures"
		{
			"FireOutput"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x81\xEC\x44\x01\x00\x00\x8B\xC1"
				"windows64"	"\x4C\x89\x4C\x24\x20\x4C\x89\x44\x24\x18\x48\x89\x54\x24\x10\x48\x89\x4C\x24\x08\x48\x81\xEC\x78\x04\x00\x00"
				"linux64"	"\x55\x48\x89\xE5\x41\x57\x41\x56\x41\x55\x41\x54\x53\x48\x81\xEC\x88\x01\x00\x00\xF3\x0F\x11\x85\x94\xFE\xFF\xFF"
				"mac64"		"\x55\x48\x89\xE5\x41\x57\x41\x56\x41\x55\x41\x54\x53\x48\x81\xEC\x78\x01\x00\x00\xF3\x0F\x11\x85\x9C\xFE\xFF\xFF"
			}
		}
	}
	
	/* SetUserInfo data */
	"#default"
	{
		"Offsets"
		{
			/**
			 * CBaseClient::SetUserCVar(char  const*,char  const*);
			 * Linux offset straight from VTable dump.
			 * Windows offset is crazy. Found the windows SetName function using string "(%d)%-.*s" (aD_S in IDA)
			 * Cross referenced back to the vtable and counted manually (SetUserCvar is 1 higher, offsets start from 1)
			 */
			"SetUserCvar"
			{
				"windows"	"33"
				"windows64"	"33"
				"linux64"	"70"
				"mac64"		"70"
			}
			/**
			 * CBaseClient::SetName(char  const*);
			 * Linux offset straight from VTable dump.
			 * Has string "(%d)%-0.*s"
			 */
			"SetClientName"
			{
				"windows"	"32"
				"windows64"	"32"
				"linux64"	"69"
				"mac64"		"69"
			}
			/**
			 * Offset into CBaseClient - Used by CBaseServer::UpdateUserSettings to determine when changes have been made.
			 * Find CBaseClient::UpdateUserSettings (strings "net_maxroutable", "cl_updaterate" etc) and the offset is set to 0 near the end.
			 * Linux: 	mov     byte ptr [esi+0B0h], 0
			 * Win:		mov     byte ptr [esi+0B0h], 0
			 *
			 * L4D2: This has been moved into CBaseClient::UpdateUserSettings(), rest of the details are still relevant.
			 */
			"InfoChanged"
			{
				"windows"	"488"
				"windows64"	"632"
				"linux64"	"600"
				"mac64"		"616"
			}
		}
	}
	
	"#default"
	{
		"Offsets"
		{
			"GiveNamedItem"
			{
				"windows"	"444"
				"windows64"	"444"
				"linux64"	"445"
				"mac64"		"445"
			}
			"RemovePlayerItem"
			{
				"windows"	"291"
				"windows64"	"291"
				"linux64"	"292"
				"mac64"		"292"
			}
			"Weapon_GetSlot"
			{
				"windows"	"287"
				"windows64"	"287"
				"linux64"	"288"
				"mac64"		"288"
			}
			"Ignite"
			{
				"windows"	"223"
				"windows64"	"223"
				"linux64"	"224"
				"mac64"		"224"
			}
			"Extinguish"
			{
				"windows"	"226"
				"windows64"	"226"
				"linux64"	"227"
				"mac64"		"227"
			}
			"Teleport"
			{
				"windows"	"112"
				"windows64"	"112"
				"linux64"	"113"
				"mac64"		"113"
			}
			"CommitSuicide"
			{
				"windows"	"497"
				"windows64"	"497"
				"linux64"	"497"
				"mac64"		"497"
			}
			"GetVelocity"
			{
				"windows"	"137"
				"windows64"	"137"
				"linux64"	"138"
				"mac64"		"138"
			}
			"EyeAngles"
			{
				"windows"	"128"
				"windows64"	"128"
				"linux64"	"129"
				"mac64"		"129"
			}
			"AcceptInput"
			{
				"windows"	"39"
				"windows64"	"39"
				"linux64"	"40"
				"mac64"		"40"
			}
			"SetEntityModel"
			{
				"windows"	"24"
				"windows64"	"24"
				"linux64"	"25"
				"mac64"		"25"
			}
			"WeaponEquip"
			{
				"windows"	"280"
				"windows64"	"280"
				"linux64"	"281"
				"mac64"		"281"
			}
			"Activate"
			{
				"windows"	"35"
				"windows64"	"35"
				"linux64"	"36"
				"mac64"		"36"
			}
			"PlayerRunCmd"
			{
				"windows"	"464"
				"windows64"	"464"
				"linux64"	"465"
				"mac64"		"465"
			}
		}
	}
}
