# vim: sts=2 ts=8 sw=2 tw=99 et ft=python: 
import os, platform

builder.SetBuildFolder('libcurl')

rvalue = {}
for cxx in builder.targets:
  binary = SM.StaticLibrary(builder, cxx, 'curl')
  binary.compiler.includes += [
    os.path.join(builder.sourcePath, 'extensions', 'curl', 'curl-src', 'lib'),
    os.path.join(builder.sourcePath, 'extensions', 'curl', 'curl-src', 'include'),
    os.path.join(builder.sourcePath, 'extensions', 'curl', 'mbedtls-src', 'include')
  ]
  
  binary.compiler.defines += [
    'BUILDING_LIBCURL',
    'CURL_STATICLIB',
  ]

  if binary.compiler.target.platform == 'mac':
    mac_version, ignore, ignore = platform.mac_ver()
    mac_tuple = mac_version.split('.')
    if int(mac_tuple[0]) >= 10 and int(mac_tuple[1]) >= 9:
      binary.compiler.defines += ['BUILTIN_STRLCAT']
  elif binary.compiler.target.platform == 'linux':
    binary.compiler.defines += ['_GNU_SOURCE']
    binary.compiler.cflags += ['-Wno-constant-conversion']

  if binary.compiler.family == 'clang':
    # https://llvm.org/bugs/show_bug.cgi?id=16428
    binary.compiler.cflags += ['-Wno-attributes']

  binary.sources += [
    #LIB_CFILES
    'altsvc.c',
    'asyn-thread.c',
    'base64.c',
    'bufref.c',
    'conncache.c',
    'connect.c',
    'content_encoding.c',
    'curl_addrinfo.c',
    'curl_endian.c',
    'curl_fnmatch.c',
    'curl_get_line.c',
    'curl_gethostname.c',
    'curl_memrchr.c',
    'curl_multibyte.c',
    'curl_path.c',
    'curl_range.c',
    'curl_threads.c',
    'doh.c',
    'dynbuf.c',
    'easy.c',
    'easygetopt.c',
    'easyoptions.c',
    'escape.c',
    'file.c',
    'fileinfo.c',
    'fopen.c',
    'formdata.c',
    'getenv.c',
    'getinfo.c',
    'hash.c',
    'headers.c',
    'hostasyn.c',
    'hostip.c',
    'hostip4.c',
    'hostip6.c',
    'hsts.c',
    'http.c',
    'http_chunks.c',
    'http_proxy.c',
    'if2ip.c',
    'inet_ntop.c',
    'inet_pton.c',
    'llist.c',
    'mime.c',
    'mprintf.c',
    'multi.c',
    'nonblock.c',
    'noproxy.c',
    'parsedate.c',
    'progress.c',
    'rand.c',
    'rename.c',
    'select.c',
    'sendf.c',
    'setopt.c',
    'sha256.c',
    'share.c',
    'slist.c',
    'speedcheck.c',
    'splay.c',
    'strcase.c',
    'strdup.c',
    'strerror.c',
    'strtok.c',
    'strtoofft.c',
    'timediff.c',
    'timeval.c',
    'transfer.c',
    'url.c',
    'urlapi.c',
    'version.c',
    'warnless.c',

    #LIB_VTLS_CFILES
    'vtls/mbedtls.c',
    'vtls/mbedtls_threadlock.c',
    'vtls/vtls.c',
    
    # LIB_VAUTH_CFILES
    'vauth/vauth.c',
  ]

  if binary.compiler.target.platform == 'windows':
    binary.sources += [
      'system_win32.c',
      'version_win32.c',
    ]

  rvalue[binary.compiler.target.arch] = builder.Add(binary)