# vim: set sts=2 ts=8 sw=2 tw=99 et ft=python:
import os

if SM.pgsql_root:
  # First compile libpq
  libpq = builder.RunScript('AMBuilderPGSQL', { 'SM': SM })

  binary = SM.ExtLibrary(builder, 'dbi.pgsql.ext')
  binary.compiler.cxxincludes += [
    os.path.join(SM.pgsql_root, 'src', 'interfaces', 'libpq'),
    os.path.join(SM.pgsql_root, 'src', 'include'),
    os.path.join(SM.mms_root, 'core', 'sourcehook')
  ]
  
  # Link the compiled libpq
  binary.compiler.postlink += [libpq.binary]
  
  if builder.target_platform == 'linux' or builder.target_platform == 'mac':
    binary.compiler.postlink += [
      '-lz',
      '-lpthread',
      '-lm'
    ]
  elif builder.target_platform == 'windows':
    binary.compiler.postlink += [
      'wsock32.lib',
      'ws2_32.lib',
      'secur32.lib'
    ]

  binary.sources += [
    os.path.join('..', '..', 'public', 'smsdk_ext.cpp'),
    os.path.join('pgsql', 'PgBasicResults.cpp'),
    os.path.join('pgsql', 'PgDatabase.cpp'),
    os.path.join('pgsql', 'PgDriver.cpp'),
    os.path.join('pgsql', 'PgStatement.cpp'),
    'extension.cpp'
  ]
  SM.extensions += [builder.Add(binary)]

